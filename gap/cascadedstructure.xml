##  <#GAPDoc Label="CascadedStructure">
##      <ManSection><Heading>CascadedStructure</Heading>
##      <Oper Name="CascadedStructure" Arg="components"/>
##      <Oper Name="CascadedStructure" Arg="components, statesymfuncs, opsymfuncs"/>
##      <Description>
##      <C>CascadedStructure</C> builds a cascaded structure from the given list of
##      <C>components</C>. The components are either permutation groups or transformation 
##      semigroups. The cascaded structure itself is just a framework in which 
##  cascaded states and operations can be instantiated, therefore creating a cascaded structure
##  is quick while calculating in it may be very computation intensive.
##      <P/>
##      The symbol functions are lists of functions for each components mapping states and 
##      operations to strings. If they are not specified  the functions return the default string
##      representations of integer numbers.
##      <Example>
##  flipflop := SemigroupByGenerators([
##                  Transformation([1,1]),
##                  Transformation([2,2]),
##                  Transformation([1,2])]);
##  Z3 := CyclicGroup(IsPermGroup,3);
##  Z3FF := CascadedStructure([Z3,flipflop]);
##      </Example>
##      </Description>
##      </ManSection>
##      <#/GAPDoc>

##      <#GAPDoc Label="CascadedYEAST">
##      <ManSection><Heading>Moving between the 'Flat' and the Cascaded</Heading>
##      <Oper Name="Build" Arg="cascadedstruct,flatobj"/>
##      <Oper Name="BuildNC" Arg="cascadedstruct,flatobj"/>
##      <Oper Name="Collapse" Arg="cascadedobj"/>
##      <Description>
##      A cascaded structure can be viewed as a flat structure: for a flat state/operation
##      one can build a cascaded one, or one can collapse a hierarchical structure. 
##      The non-check version is faster but should be used only when the flat operation is known to be in the cascaded structure.
##      <P/>
##
##      These operations are defined for both operations and states and can be considered as the
##      low-level version of <C>Raise</C> and <C>Flatten</C> in  <Ref Chap="HierarchicalDecompositions" Style="Text"/>.  
##      </Description>
##      </ManSection>
##      <#/GAPDoc>

##      <#GAPDoc Label="MonomialGenerators">
##      <ManSection><Heading>Constructing monomial generators for the wreath product</Heading>
##      <Func Name="MonomialGenerators" Arg="cascadedstruct"/>
##      <Description>
##      The wreath product (the full structure on the given components) can be generated by
##      monomial generators, i.e. cascaded operations containing only one elementary dependence.
##      For cascades of groups it returns a minimal set of monomial generators, but for semigroups it may not.
##      </Description>
##      </ManSection>
##      <#/GAPDoc>
