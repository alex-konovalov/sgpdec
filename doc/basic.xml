 We consider hierarchical decompositions of finite transformation semigroups
 and permutation groups, where hierarchical means that there are only
 unidirectional connections among the components, or saying it algebraically,
 we study substructures of wreath products. The novelty of this approach is
 that we can explicitly represent and therefore we can examine directly the
 elements of the wreath product with their full structure, i.e. dependency
 functions from the state sets of components of the levels above in the
 hierarchy. 

<P/>
Basically, there are two different ways of using the <Package>SgpDec</Package> package. Depending on whether the starting point is a complex structure or a set of simple(r) building blocks, we can do decomposition or composition.

<Section Label="basic"><Heading>Compositions</Heading>

We build composite semigroups  by giving a set of generators. 


Typical question is <E>'What can be built from a given set of simple(r) components?'</E>.



</Section>

<Section Label="basic"><Heading>Decompositions</Heading>

<B>Decomposition</B>: finding components and the hierarchical connections between the components for  a nonsimple semigroup/group, establishing homo/isomorphims between the original structure and the cascaded product. See Chapter <Ref Chap="HierarchicalDecompositions" Style="Text"/>. 
<Br/>
A typical scenario is that for a given composite semigroup or group we choose a decomposition algorithm which returns a cascaded product. For permutation groups the Lagrange coordinatization  (see Section <Ref Sect="sec:lagrange decomposition" Style="Number"/>)is used. For transformation semigroups the holonomy method will be  used (see Section <Ref Sect="sec:holonomy decomposition" Style="Number"/>).

Transformation semigroups can be decomposed similarly by the holonomy method  <Cite Key="holonomy_arxiv"/>.

</Section>
